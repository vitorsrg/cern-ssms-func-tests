################################################################################
#
################################################################################

apiVersion: argoproj.io/v1alpha1
kind: Workflow

################################################################################

metadata:
  name: func-tests
  labels:
    workflows.argoproj.io/archive-strategy: "false"
  annotations:
    workflows.argoproj.io/description: ""

################################################################################

spec:
  ##############################################################################

  entrypoint: main

  ##############################################################################

  arguments:
    parameters:
      ##########################################################################
      - name: run_suffix
      ##########################################################################
      - name: openstack_token
      ##########################################################################
      - name: gitlab_token
      - name: gitlab_url
        value: gitlab.cern.ch/kubernetes/testing/functional.git
      ##########################################################################
      - name: source_path
        value: /mnt/func-tests-src
      ##########################################################################
      - name: cluster_name
        value: "vsantaro-func-tests--test"
      - name: cluster_template
        value: "kubernetes-1.22.9-1"
      - name: cluster_node_count
        value: "4"
      - name: cluster_labels_json
        value: |
          {
            "key1": "val1",
            "key2": "x=1,\ny=2"
          }
      ##########################################################################
      - name: may_create_cluster
        value: "true"
      - name: may_fail_if_exists
        value: "false"
      - name: test_name
      - name: test_names
      - name: max_test_count
        value: "5"
      - name: may_delete_cluster
        value: "false"
      - name: should_delete_existing_cluster
        value: "false"

  ##############################################################################

  TTLStrategy:
    secondsAfterCompletion: 86400  # 1 day

  volumeClaimGC:
    strategy: OnWorkflowCompletion

  volumes:
    - name: func-tests-src
      emptyDir: {}

  ##############################################################################

  templates:
    ############################################################################

    - name: main
      dag:
        tasks:

          ######################################################################

          - name: process-input
            template: process-input
            arguments:
              parameters:
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: test_names
                  value: "{{workflow.parameters.test_names}}"
                - name: max_test_count
                  value: "{{workflow.parameters.max_test_count}}"

          ######################################################################

          - name: create-cluster
            template: create-cluster
            arguments:
              parameters:
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: cluster_template
                  value: "{{workflow.parameters.cluster_template}}"
                - name: cluster_node_count
                  value: "{{workflow.parameters.cluster_node_count}}"
                - name: cluster_labels_json
                  value: "{{workflow.parameters.cluster_labels_json}}"
                - name: may_create_cluster
                  value: "{{workflow.parameters.may_create_cluster}}"
                - name: may_fail_if_exists
                  value: "{{workflow.parameters.may_fail_if_exists}}"

          ######################################################################

          - name: wait-cluster-ready
            template: wait-cluster-ready
            depends: |
              create-cluster.Succeeded
            arguments:
              parameters:
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"

          ######################################################################

          - name: copy-source
            template: copy-source
            depends: |
              wait-cluster-ready.Succeeded
              && process-input.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"

          ######################################################################

          - name: exec-test
            template: exec-test
            withParam: "{{tasks.process-input.outputs.parameters.tests}}"
            depends: |
              copy-source.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: test_name
                  value: "{{item.test_name}}"
                - name: test_key
                  value: "{{item.test_key}}"

          ######################################################################

          - name: clean-source
            template: clean-source
            depends: |
              copy-source.Failed
              || (
                exec-test.Succeeded
                || exec-test.Failed
                || exec-test.Errored
                || exec-test.Skipped
              )
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"

          ######################################################################

          - name: delete-cluster
            template: delete-cluster
            depends: |
              wait-cluster-ready.Failed
              || (
                clean-source.Succeeded
                || clean-source.Failed
              )
            arguments:
              parameters:
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: may_delete_cluster
                  value: "{{workflow.parameters.may_delete_cluster}}"
                - name: has_created_cluster
                  value: "{{tasks.create-cluster.outputs.parameters.has_created_cluster}}"
                - name: should_delete_existing_cluster
                  value: "{{workflow.parameters.should_delete_existing_cluster}}"

          ######################################################################

    ############################################################################

    - name: process-input
      inputs:
        parameters:
          - name: gitlab_token
          - name: gitlab_url
          - name: test_names
          - name: max_test_count
          - name: source_path
      outputs:
        parameters:
          - name: tests
            valueFrom:
              path: /root/output/tests.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/opt/conda/bin/python]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/process_input.py"
        env:
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: test_names
            value: "{{inputs.parameters.test_names}}"
          - name: max_test_count
            value: "{{inputs.parameters.max_test_count}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "1"
      initContainers:
        - &init_clone_repo
          name: clone-source
          # TODO: find lighter image
          image: registry.cern.ch/vsantaro/func-tests
          command: [/bin/bash]
          args:
            - -c
            - |
              #!/bin/bash

              set -ex

              git clone \
                "https://oauth2:${gitlab_token}@${gitlab_url}" \
                --branch vitorsrg \
                --single-branch \
                --depth 1 \
                ${source_path}
          env:
            - name: gitlab_token
              value: "{{inputs.parameters.gitlab_token}}"
            - name: gitlab_url
              value: "{{inputs.parameters.gitlab_url}}"
            - name: source_path
              value: "{{inputs.parameters.source_path}}"
          mirrorVolumeMounts: true

    ############################################################################

    - name: create-cluster
      inputs:
        parameters:
          - name: openstack_token
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
          - name: cluster_name
          - name: cluster_template
          - name: cluster_node_count
          - name: cluster_labels_json
          - name: may_create_cluster
          - name: may_fail_if_exists
      outputs:
        parameters:
          - name: cluster_uuid
            valueFrom:
              path: /root/output/cluster_uuid.txt
          - name: has_created_cluster
            valueFrom:
              path: /root/output/has_created_cluster.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/create_cluster.sh"
        env:
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
          - name: cluster_template
            value: "{{inputs.parameters.cluster_template}}"
          - name: cluster_node_count
            value: "{{inputs.parameters.cluster_node_count}}"
          - name: cluster_labels_json
            value: "{{inputs.parameters.cluster_labels_json}}"
          - name: may_create_cluster
            value: "{{inputs.parameters.may_create_cluster}}"
          - name: may_fail_if_exists
            value: "{{inputs.parameters.may_fail_if_exists}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "1"
      initContainers:
        - *init_clone_repo

    ############################################################################

    - name: wait-cluster-ready
      inputs:
        parameters:
          - name: openstack_token
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
          - name: cluster_name
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/wait_cluster_ready.sh"
        env:
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "100m"
          limits:
            memory: "4Gi"
            cpu: "1"
      initContainers:
        - *init_clone_repo

    ############################################################################

    - name: copy-source
      inputs:
        parameters:
          - name: run_suffix
          - name: openstack_token
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
          - name: cluster_name
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/copy_source.sh"
        env:
          - name: run_suffix
            value: "{{inputs.parameters.run_suffix}}"
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
      initContainers:
        - *init_clone_repo

    ############################################################################

    - name: exec-test
      inputs:
        parameters:
          - name: run_suffix
          - name: openstack_token
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
          - name: cluster_name
          - name: test_name
          - name: test_key
      outputs:
        parameters:
          - name: exit_code
            valueFrom:
              path: /root/output/exit_code.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/exec_test.sh"
        env:
          - name: run_suffix
            value: "{{inputs.parameters.run_suffix}}"
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
          - name: test_name
            value: "{{inputs.parameters.test_name}}"
          - name: test_key
            value: "{{inputs.parameters.test_key}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "100m"
          limits:
            memory: "4Gi"
            cpu: "1"
      initContainers:
        - *init_clone_repo

    ############################################################################

    - name: clean-source
      inputs:
        parameters:
          - name: run_suffix
          - name: openstack_token
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
          - name: cluster_name
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/clean_source.sh"
        env:
          - name: run_suffix
            value: "{{inputs.parameters.run_suffix}}"
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"
      initContainers:
        - *init_clone_repo

    ############################################################################

    - name: delete-cluster
      inputs:
        parameters:
          - name: openstack_token
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
          - name: cluster_name
          - name: may_delete_cluster
          - name: has_created_cluster
          - name: should_delete_existing_cluster
      outputs:
        parameters:
          - name: has_deleted_cluster
            valueFrom:
              path: /root/output/has_deleted_cluster.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests-src
            mountPath: "{{inputs.parameters.source_path}}"
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/delete_cluster.sh"
        env:
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
          - name: may_delete_cluster
            value: "{{inputs.parameters.may_delete_cluster}}"
          - name: has_created_cluster
            value: "{{inputs.parameters.has_created_cluster}}"
          - name: should_delete_existing_cluster
            value: "{{inputs.parameters.should_delete_existing_cluster}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "100m"
          limits:
            memory: "4Gi"
            cpu: "1"
      initContainers:
        - *init_clone_repo
