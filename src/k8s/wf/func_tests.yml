################################################################################
#
################################################################################

apiVersion: argoproj.io/v1alpha1
kind: Workflow

################################################################################

metadata:
  name: func-tests
  labels:
    workflows.argoproj.io/archive-strategy: "false"
  annotations:
    workflows.argoproj.io/description: ""

################################################################################

spec:
  ##############################################################################

  entrypoint: main

  ##############################################################################

  arguments:
    parameters:
      ##########################################################################
      - name: run_suffix
      ##########################################################################
      - name: openstack_token
      ##########################################################################
      - name: gitlab_token
      - name: gitlab_url
        value: gitlab.cern.ch/kubernetes/testing/functional.git
      ##########################################################################
      - name: source_path
        value: /mnt/func-tests-src
      ##########################################################################
      - name: cluster_name
        value: "vsantaro-func-tests--test"
      - name: cluster_template
        value: "kubernetes-1.22.9-1"
      - name: cluster_node_count
        value: "4"
      - name: cluster_labels_json
        value: |
          {
            "key1": "val1",
            "key2": "x=1,\ny=2"
          }
      ##########################################################################
      - name: may_create_cluster
        value: "true"
      - name: may_fail_if_exists
        value: "false"
      - name: test_name
      - name: may_delete_cluster
        value: "false"
      - name: should_delete_existing_cluster
        value: "false"

  ##############################################################################

  TTLStrategy:
    secondsAfterCompletion: 86400  # 1 day

  volumeClaimGC:
    strategy: OnWorkflowCompletion

  volumeClaimTemplates:
    - metadata:
        name: func-tests
      spec:
        accessModes:
          - ReadWriteMany
          - ReadWriteOnce
        storageClassName: manila-ephemeral
        resources:
          requests:
            storage: 1Gi

  ##############################################################################

  templates:
    ############################################################################

    - name: main
      dag:
        tasks:

          ######################################################################

          - name: fetch-source
            template: fetch-source
            arguments:
              parameters:
                - name: gitlab_token
                  value: "{{workflow.parameters.gitlab_token}}"
                - name: gitlab_url
                  value: "{{workflow.parameters.gitlab_url}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"

          ######################################################################

          - name: create-cluster
            template: create-cluster
            depends: |
              fetch-source.Succeeded
            arguments:
              parameters:
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: cluster_template
                  value: "{{workflow.parameters.cluster_template}}"
                - name: cluster_node_count
                  value: "{{workflow.parameters.cluster_node_count}}"
                - name: cluster_labels_json
                  value: "{{workflow.parameters.cluster_labels_json}}"
                - name: may_create_cluster
                  value: "{{workflow.parameters.may_create_cluster}}"
                - name: may_fail_if_exists
                  value: "{{workflow.parameters.may_fail_if_exists}}"

          ######################################################################

          - name: wait-cluster-ready
            template: wait-cluster-ready
            depends: |
              create-cluster.Succeeded
            arguments:
              parameters:
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"

          ######################################################################

          - name: copy-source
            template: copy-source
            depends: |
              wait-cluster-ready.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"

          ######################################################################

          - name: exec-test-01
            template: exec-test
            depends: |
              copy-source.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: test_name
                  value: "k8s_eos"
                - name: test_key
                  value: "01"

          ######################################################################

          - name: exec-test-02
            template: exec-test
            depends: |
              copy-source.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: test_name
                  value: "k8s_eos"
                - name: test_key
                  value: "02"

          ######################################################################

          - name: exec-test-03
            template: exec-test
            depends: |
              copy-source.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: test_name
                  value: "always_succeeds"
                - name: test_key
                  value: "03"

          ######################################################################

          - name: exec-test-04
            template: exec-test
            depends: |
              copy-source.Succeeded
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: test_name
                  value: "always_fails"
                - name: test_key
                  value: "04"

          ######################################################################

          - name: exec-test-05
            template: exec-test
            depends: |
              copy-source.Succeeded
            when: |
              false
            # {{steps['create-cluster'].outputs.has_created_cluster}} == true
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: test_name
                  value: "always_fails"
                - name: test_key
                  value: "05"

          ######################################################################

          - name: clean-source
            template: clean-source
            depends: |
              copy-source.Failed
              || (
                (
                  exec-test-01.Succeeded
                  || exec-test-01.Failed
                  || exec-test-01.Errored
                  || exec-test-01.Skipped
                )
                && (
                  exec-test-02.Succeeded
                  || exec-test-02.Failed
                  || exec-test-02.Errored
                  || exec-test-02.Skipped
                )
                && (
                  exec-test-03.Succeeded
                  || exec-test-03.Failed
                  || exec-test-03.Errored
                  || exec-test-03.Skipped
                )
                && (
                  exec-test-04.Succeeded
                  || exec-test-04.Failed
                  || exec-test-04.Errored
                  || exec-test-04.Skipped
                )
                && (
                  exec-test-05.Succeeded
                  || exec-test-05.Failed
                  || exec-test-05.Errored
                  || exec-test-05.Skipped
                )
              )
            arguments:
              parameters:
                - name: run_suffix
                  value: "{{workflow.parameters.run_suffix}}"
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"

          ######################################################################

          - name: delete-cluster
            template: delete-cluster
            depends: |
              wait-cluster-ready.Failed
              || (
                clean-source.Succeeded
                || clean-source.Failed
              )
            arguments:
              parameters:
                - name: openstack_token
                  value: "{{workflow.parameters.openstack_token}}"
                - name: source_path
                  value: "{{workflow.parameters.source_path}}"
                - name: cluster_name
                  value: "{{workflow.parameters.cluster_name}}"
                - name: may_delete_cluster
                  value: "{{workflow.parameters.may_delete_cluster}}"
                - name: has_created_cluster
                  value: "{{steps['create-cluster'].outputs.has_created_cluster}}"
                - name: should_delete_existing_cluster
                  value: "{{workflow.parameters.should_delete_existing_cluster}}"

          ######################################################################

    ############################################################################

    - name: fetch-source
      inputs:
        parameters:
          - name: gitlab_token
          - name: gitlab_url
          - name: source_path
      script:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: false
        command: [/bin/bash]
        env:
          - name: gitlab_token
            value: "{{inputs.parameters.gitlab_token}}"
          - name: gitlab_url
            value: "{{inputs.parameters.gitlab_url}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
        source: |
          #!/bin/bash

          set -ex

          git clone \
            "https://oauth2:${gitlab_token}@${gitlab_url}" \
            --branch vitorsrg \
            --single-branch \
            --depth 1 \
            ${source_path}
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"

    ############################################################################

    - name: create-cluster
      inputs:
        parameters:
          - name: openstack_token
          - name: source_path
          - name: cluster_name
          - name: cluster_template
          - name: cluster_node_count
          - name: cluster_labels_json
          - name: may_create_cluster
          - name: may_fail_if_exists
      outputs:
        parameters:
          - name: cluster_uuid
            valueFrom:
              path: /root/output/cluster_uuid.txt
          - name: has_created_cluster
            valueFrom:
              path: /root/output/has_created_cluster.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: true
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/create_cluster.sh"
        env:
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
          - name: cluster_template
            value: "{{inputs.parameters.cluster_template}}"
          - name: cluster_node_count
            value: "{{inputs.parameters.cluster_node_count}}"
          - name: cluster_labels_json
            value: "{{inputs.parameters.cluster_labels_json}}"
          - name: may_create_cluster
            value: "{{inputs.parameters.may_create_cluster}}"
          - name: may_fail_if_exists
            value: "{{inputs.parameters.may_fail_if_exists}}"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "1"

    ############################################################################

    - name: wait-cluster-ready
      inputs:
        parameters:
          - name: openstack_token
          - name: source_path
          - name: cluster_name
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: true
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/wait_cluster_ready.sh"
        env:
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "4Gi"
            cpu: "1"

    ############################################################################

    - name: copy-source
      inputs:
        parameters:
          - name: run_suffix
          - name: openstack_token
          - name: source_path
          - name: cluster_name
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: true
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/copy_source.sh"
        env:
          - name: run_suffix
            value: "{{inputs.parameters.run_suffix}}"
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"

    ############################################################################

    - name: exec-test
      inputs:
        parameters:
          - name: run_suffix
          - name: openstack_token
          - name: source_path
          - name: cluster_name
          - name: test_name
          - name: test_key
      outputs:
        parameters:
          - name: exit_code
            valueFrom:
              path: /root/output/exit_code.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: true
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/exec_test.sh"
        env:
          - name: run_suffix
            value: "{{inputs.parameters.run_suffix}}"
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
          - name: test_name
            value: "{{inputs.parameters.test_name}}"
          - name: test_key
            value: "{{inputs.parameters.test_key}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "100m"
          limits:
            memory: "4Gi"
            cpu: "1"

    ############################################################################

    - name: clean-source
      inputs:
        parameters:
          - name: run_suffix
          - name: openstack_token
          - name: source_path
          - name: cluster_name
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: true
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/clean_source.sh"
        env:
          - name: run_suffix
            value: "{{inputs.parameters.run_suffix}}"
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"

    ############################################################################

    - name: delete-cluster
      inputs:
        parameters:
          - name: openstack_token
          - name: source_path
          - name: cluster_name
          - name: may_delete_cluster
          - name: has_created_cluster
          - name: should_delete_existing_cluster
      outputs:
        parameters:
          - name: has_deleted_cluster
            valueFrom:
              path: /root/output/has_deleted_cluster.txt
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: func-tests
            mountPath: "{{inputs.parameters.source_path}}"
            readOnly: true
        command: [/bin/bash]
        args:
          - "{{inputs.parameters.source_path}}/src/script/workflow/delete_cluster.sh"
        env:
          - name: openstack_token
            value: "{{inputs.parameters.openstack_token}}"
          - name: source_path
            value: "{{inputs.parameters.source_path}}"
          - name: cluster_name
            value: "{{inputs.parameters.cluster_name}}"
          - name: may_delete_cluster
            value: "{{inputs.parameters.may_delete_cluster}}"
          - name: has_created_cluster
            value: "{{inputs.parameters.has_created_cluster}}"
          - name: should_delete_existing_cluster
            value: "{{inputs.parameters.should_delete_existing_cluster}}"
        resources:
          requests:
            memory: "1Gi"
            cpu: "100m"
          limits:
            memory: "4Gi"
            cpu: "1"
