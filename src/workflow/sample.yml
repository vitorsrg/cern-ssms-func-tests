apiVersion: argoproj.io/v1alpha1
kind: Workflow

metadata:
  generateName: dispatch-sample-
  labels:
    workflows.argoproj.io/archive-strategy: "false"
  annotations:
    workflows.argoproj.io/description: ""

spec:
  entrypoint: main

  arguments:
    parameters:
      - name: os-token
      - name: gitlab-token

  volumeClaimTemplates:
    - metadata:
        name: gitlab-repo
      spec:
        accessModes: [ReadWriteMany]
        storageClassName: geneva-cephfs-testing
        resources:
          requests:
            storage: 1Gi

  templates:
    - name: main
      steps:
        - - name: clone-repo
            template: clone-repo
            arguments:
              parameters:
                - name: gitlab-token
                  value: "{{workflow.parameters.gitlab-token}}"
        - - name: create-cluster
            template: create-cluster
            arguments:
              parameters:
                - name: os-token
                  value: "{{workflow.parameters.os-token}}"
        - - name: wait-cluster-ready
            template: wait-cluster-ready
            arguments:
              parameters:
                - name: os-token
                  value: "{{workflow.parameters.os-token}}"
        # - - name: exec-test
        #     template: exec-test
        - - name: delete-cluster
            template: delete-cluster
            arguments:
              parameters:
                - name: os-token
                  value: "{{workflow.parameters.os-token}}"

    - name: clone-repo
      inputs:
        parameters:
          - name: gitlab-token
      script:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: gitlab-repo
            mountPath: /mnt/gitlab-repo
        command: [/bin/bash]
        env:
          - name: gitlab_token
          - value: "{{inputs.parameters.gitlab-token}}"
        source: |
          #!/bin/bash

          set -ex

          git clone \
            "https://oauth2:${gitlab_token}@gitlab.cern.ch/kubernetes/testing/functional.git" \
            --branch vitorsrg \
            --single-branch \
            --depth 1 \
            /mnt/gitlab-repo

    - name: create-cluster
      inputs:
        parameters:
          - name: os-token
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: gitlab-repo
            mountPath: /mnt/gitlab-repo
        command: [/bin/bash]
        args:
          - /mnt/gitlab-repo/src/script/workflow/create_cluster.sh
        env:
          - name: OS_TOKEN
          - value: "{{inputs.parameters.os-token}}"

    - name: wait-cluster-ready
      inputs:
        parameters:
          - name: os-token
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: gitlab-repo
            mountPath: /mnt/gitlab-repo
        command: [/bin/bash]
        args:
          - /mnt/gitlab-repo/src/script/workflow/wait_cluster_ready.sh
        env:
          - name: OS_TOKEN
          - value: "{{inputs.parameters.os-token}}"

    - name: exec-test
      script:
        image: registry.cern.ch/vsantaro/lxplus8-ssh-image
        command: [/bin/bash]
        source: |
          #!/bin/bash

          set -ex

          source /root/os_rc_token.sh
          export OS_TOKEN="$(cat /root/os_token.txt)"

          mkdir -p /root/func-tests--test/
          openstack coe cluster config \
              vsantaro-func-tests--test \
              --dir /root/func-tests--test/ \
              --force \
              || true

          ls  /root/func-tests--test/

          export KUBECONFIG="/root/func-tests--test/config"
          kubectl config set-context --current --namespace=default

          kubectl delete job check-eos || true
          kubectl apply -f /root/src/k8s-eos/job.yml

          while true; do
            sleep 10
            active=$(kubectl get job check-eos -o json | jq -r '.status | has("active")')
            succeeded=$(kubectl get job check-eos -o json | jq -r '.status | has("succeeded")')

            if [ "$active" = "true" ]; then
              printf "Waiting job to finish.\n"
              continue
            elif [ "$succeeded" = "true" ]; then
              printf "Job succeeded.\n"
              kubectl logs job/check-eos
              break
            else
              printf "Job failed.\n"
              kubectl logs job/check-eos
              exit -1
            fi
          done

    - name: delete-cluster
      inputs:
        parameters:
          - name: os-token
      container:
        image: registry.cern.ch/vsantaro/func-tests
        volumeMounts:
          - name: gitlab-repo
            mountPath: /mnt/gitlab-repo
        command: [/bin/bash]
        args:
          - /mnt/gitlab-repo/src/script/workflow/delete_cluster.sh
        env:
          - name: OS_TOKEN
          - value: "{{inputs.parameters.os-token}}"
